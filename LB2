#!/usr/bin/env python
# coding: utf-8

# In[3]:


import numpy as np
import math
import matplotlib.pyplot as plt

def f(x):
    return 9*x**4+12*x**3-36**2+x-2

a = 1
b = 2
eps = 0.0001 #точність

def rec_dyhotomy(a, b, eps):
    if abs(f(b) - f(a)) < eps:
        print('Обчислюємо корінь')
    return

mid = (a+b) / 2

if f(mid) == 0 or abs(f(mid)) < eps:
    print(f'Корінь знаходиться в точці x = {mid}')
elif f(a)*f(mid) < 0:
    rec_dyhotomy(a, mid, eps)
else:
    rec_dyhotomy(mid, b, eps)

rec_dyhotomy(a, b, eps)

x = np.arange(1, 2, 0.0001)

plt.plot(x, f(x))
plt.xlabel('x')
plt.ylabel('f(x)')
plt.title('Метод ділення навпіл')
plt.grid()
plt.show()


# In[4]:


import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return 9*x**4 + 12*x**3 + 36*x**2 + x - 2

eps = 0.0001 

def rec_dyhotomy(a, b, eps):
    if abs(f(b) - f(a)) < eps:
        print('Кореня немає')
        return
    mid = (a+b) / 2
    if f(mid) == 0 or abs(f(mid)) < eps:
            print(f'Корінь знаходиться в точці x = {mid}')
    elif f(a)*f(mid) < 0:
        rec_dyhotomy(a, mid, eps)
    else:
        rec_dyhotomy(mid, b, eps)

rec_dyhotomy(-3, -2, eps)
rec_dyhotomy(1, 2, eps)


# In[6]:


from scipy.misc import derivative


def f(x):
    return 9*x**4 + 12*x**3 + 36*x**2 + x - 2

a = 1
b = 2
eps = 0.0001

def hord (a, b, eps):
    if abs(b - a) < eps:
        print('Кореня немає')
        return
    if (f(a)*derivative(f, a, n = 2)):
        x0 = a
        xi = b
    else:
        x0 = b
        xi = a    
    xi_1 = xi - (xi - x0) * f(xi)/(f(xi) - f(x0))
    while (abs(xi_1 - xi) > eps):
        xi = xi_1
        xi_1 = xi-(xi - x0) * f(xi)/(f(xi) - f(x0))
    else:
        print(f'Корінь знаходиться в точці x =', xi_1)
hord (a, b, eps)


# In[ ]:




